# DCV Dynamic Agent Routing Configuration
# オンデマンドAgent対応 - 動的IPルーティング
# URL形式: https://10.213.66.188:8443/<AgentのIP>/
# 例: https://10.213.66.188:8443/10.150.248.180/ → 10.150.248.180:8443
#     https://10.213.66.188:8443/10.150.248.136/ → 10.150.248.136:8443

# WebSocket Upgrade Map
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 8443 ssl;
    http2 on;
    server_name _;

    # SSL証明書設定
    ssl_certificate /etc/dcv-connection-gateway/certs/dcv.crt;
    ssl_certificate_key /etc/dcv-connection-gateway/certs/dcv.key;
    
    # SSL最適化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # ログ設定
    access_log /var/log/nginx/dcv-access.log;
    error_log /var/log/nginx/dcv-error.log;

    # クライアント設定
    client_max_body_size 1G;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Agent IP抽出用の変数設定
    set $agent_ip "";

    # 動的Agent IPルーティング
    # パターン: /10.150.248.180/ または /192.168.1.100/ など
    location ~ ^/([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})(/.*)?$ {
        # Agent IPを変数に設定
        set $agent_ip $1;
        set $agent_path $2;
        
        # デフォルトパスを設定（空の場合は/）
        if ($agent_path = "") {
            set $agent_path "/";
        }
        
        # Agent IPの妥当性チェック（10.150.248.x または 192.168.x.x のみ許可）
        if ($agent_ip !~ "^(10\.150\.248\.|192\.168\.)") {
            return 403 "Forbidden: Invalid Agent IP range";
        }
        
        # 動的プロキシ設定
        proxy_pass https://$agent_ip:8443$agent_path;
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        
        # WebSocket対応ヘッダー
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # 標準ヘッダー
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Agent-IP $agent_ip;
        
        # タイムアウト設定
        proxy_connect_timeout 10s;  # 短めに設定（オンデマンドAgent対応）
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # バッファリング無効化
        proxy_buffering off;
        tcp_nodelay on;
        proxy_socket_keepalive on;
        
        # エラーハンドリング
        proxy_intercept_errors on;
        error_page 502 503 504 = @agent_unavailable;
    }

    # Agent利用不可時のエラーページ
    location @agent_unavailable {
        return 503 '<!DOCTYPE html>
<html>
<head>
    <title>Agent Unavailable</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 50px; background: #f8f9fa; }
        .container { max-width: 600px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .error { color: #dc3545; text-align: center; }
        .info { color: #6c757d; margin-top: 20px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="error">
            <h1>🚫 Agent Unavailable</h1>
            <p>指定されたAgent (<strong>$agent_ip</strong>) に接続できません。</p>
        </div>
        <div class="info">
            <h3>考えられる原因:</h3>
            <ul>
                <li>Agentが起動していない</li>
                <li>DCVサービスが停止している</li>
                <li>ネットワーク接続の問題</li>
                <li>Agentが削除された</li>
            </ul>
            <p><strong>解決方法:</strong> フロントエンドでAgent一覧を更新し、利用可能なAgentを選択してください。</p>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }

    # ヘルスチェックエンドポイント
    location /health {
        access_log off;
        return 200 '{"status":"ok","service":"dcv-gateway","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # API: 接続可能なAgent一覧（簡易版）
    location /api/agents/available {
        # 実際の実装では、Agentの生存確認を行う
        return 200 '{
            "message": "Dynamic routing enabled",
            "usage": "https://10.213.66.188:8443/<AGENT_IP>/",
            "examples": [
                "https://10.213.66.188:8443/10.150.248.180/",
                "https://10.213.66.188:8443/10.150.248.136/"
            ],
            "allowed_ranges": [
                "10.150.248.x",
                "192.168.x.x"
            ]
        }';
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin *;
    }

    # ルートアクセス時の案内ページ
    location = / {
        return 200 '<!DOCTYPE html>
<html>
<head>
    <title>DCV Dynamic Gateway</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 50px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; text-align: center; }
        .usage { background: #e9ecef; padding: 20px; border-radius: 5px; margin: 20px 0; }
        .example { background: #d4edda; padding: 15px; border-radius: 5px; margin: 10px 0; }
        code { background: #f8f9fa; padding: 2px 6px; border-radius: 3px; font-family: monospace; }
    </style>
</head>
<body>
    <div class="container">
        <h1>🌐 DCV Dynamic Gateway</h1>
        <p style="text-align: center; color: #666;">オンデマンドAgent対応の動的ルーティングゲートウェイ</p>
        
        <div class="usage">
            <h3>📋 使用方法</h3>
            <p>以下の形式でAgentに直接アクセスできます：</p>
            <p><code>https://10.213.66.188:8443/&lt;AgentのIP&gt;/</code></p>
        </div>
        
        <div class="example">
            <h4>💡 例:</h4>
            <ul>
                <li><code>https://10.213.66.188:8443/10.150.248.180/</code> → Agent1</li>
                <li><code>https://10.213.66.188:8443/10.150.248.136/</code> → Agent2</li>
                <li><code>https://10.213.66.188:8443/192.168.1.100/</code> → カスタムAgent</li>
            </ul>
        </div>
        
        <div class="usage">
            <h3>🔒 セキュリティ</h3>
            <p>許可されたIPレンジ:</p>
            <ul>
                <li><code>10.150.248.x</code> (内部ネットワーク)</li>
                <li><code>192.168.x.x</code> (プライベートネットワーク)</li>
            </ul>
        </div>
        
        <div class="usage">
            <h3>🔧 API</h3>
            <ul>
                <li><a href="/health">ヘルスチェック</a>: <code>/health</code></li>
                <li><a href="/api/agents/available">Agent情報</a>: <code>/api/agents/available</code></li>
            </ul>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }

    # その他のパスは404
    location / {
        return 404 '<!DOCTYPE html>
<html>
<head><title>404 Not Found</title></head>
<body>
    <h1>404 Not Found</h1>
    <p>正しい形式: <code>https://10.213.66.188:8443/&lt;AgentのIP&gt;/</code></p>
    <p><a href="/">トップページに戻る</a></p>
</body>
</html>';
        add_header Content-Type text/html;
    }
}

# WebSocket Upgrade Map
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}